[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "langchain-google-community"
version = "2.0.10"
description = "An integration package connecting miscellaneous Google's products and LangChain"
authors = []
license = {text = "MIT"}
requires-python = ">=3.10,<3.13.0"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain-google"

dependencies = [
    "langchain-core>=1.0.0a3",
    "langchain-community>=0.3.29",
    "google-api-core>=2.25,<3",
    "google-api-python-client>=2.161,<3",
    "google-cloud-core>=2.4.3,<3",
    "grpcio>=1.74,<2",
    "google-cloud-modelarmor>=0.2.8",
]

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain-google/tree/main/libs/community"

[project.optional-dependencies]
bigquery = ["google-cloud-bigquery>=3.21.0,<4.0.0"]
calendar = ["google-auth>=2.36.0,<3.0.0", "google-auth-oauthlib>=1.2.0,<2.0.0"]
docai = [
    "google-cloud-documentai>=2.26.0,<3.0.0",
    "google-cloud-contentwarehouse>=0.7.7,<1.0.0",
    "google-cloud-documentai-toolbox>=0.13.3a0,<1.0.0",
    "gapic-google-longrunning>=0.11.2,<1.0.0",
]
drive = ["google-auth-httplib2>=0.2.0,<1.0.0", "google-auth-oauthlib>=1.2.0,<2.0.0"]
gcs = ["google-cloud-storage>=2.16.0,<3.0.0"]
speech = ["google-cloud-speech>=2.26.0,<3.0.0"]
places = ["googlemaps>=4.10.0,<5.0.0"]
texttospeech = ["google-cloud-texttospeech>=2.16.3,<3.0.0"]
translate = ["google-cloud-translate>=3.15.3,<4.0.0"]
vertexaisearch = ["google-cloud-discoveryengine>=0.11.14,<1.0.0"]
vision = ["google-cloud-vision>=3.7.2,<4.0.0"]
gmail = ["google-auth-httplib2>=0.2.0,<1.0.0", "google-auth-oauthlib>=1.2.0,<2.0.0", "beautifulsoup4>=4.12.3,<5.0.0"]
featurestore = ["google-cloud-bigquery-storage>=2.6.0,<3.0.0", "pandas>=1.0.0; python_version<'3.12'", "pandas>=2.0.0,<3.0.0; python_version>='3.12'", "pyarrow>=6.0.1", "db-dtypes>=1.2.0,<2.0.0", "google-cloud-aiplatform>=1.56.0,<2.0.0", "pydantic>=2.7.4,<3.0.0"]

[dependency-groups]
test = [
    "pytest>=7.3.0,<8.0.0",
    "freezegun>=1.2.2,<2.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "syrupy>=4.0.2,<5.0.0",
    "pytest-watcher>=0.3.4,<1.0.0",
    "pytest-asyncio>=0.21.1,<1.0.0",
    "pytest-retry>=1.7.0,<2.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "google-cloud-documentai>=2.24.2,<3.0.0",
    "google-cloud-documentai-toolbox>=0.13.3a0,<1.0.0; python_version<'3.13'",
    "google-cloud-bigquery>=3.19.0,<4.0.0",
    "google-cloud-discoveryengine>=0.11.14,<1.0.0",
    "cloudpickle>=3.0.0,<4.0.0",
]

test_integration = [
    "pillow>=10.1.0,<11.0.0",
]

lint = [
    "ruff>=0.12.10,<1",
]

typing = [
    "mypy>=1.17.1,<2.0.0",
    "types-requests>=2.28.11.5,<3.0.0",
    "types-google-cloud-ndb>=2.2.0.1,<3.0.0.0",
    "types-pillow>=10.1.0.2,<11.0.0.0",
    "types-protobuf>=4.24.0.20240302,<5.0.0.0",
    "types-beautifulsoup4>=4.12.0,<5.0.0",
]

dev = [
    "pillow>=10.1.0,<11.0.0",
    "types-requests>=2.31.0.10,<3.0.0.0",
    "types-pillow>=10.1.0.2,<11.0.0.0",
    "types-google-cloud-ndb>=2.2.0.1,<3.0.0.0",
]

[tool.ruff]
target-version = "py39"
fix = true

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
]

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"

[tool.uv]
constraint-dependencies = [
    "llvmlite!=0.45.0; sys_platform == 'darwin' and platform_machine == 'arm64'"
]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
