[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "langchain-google-vertexai"
version = "2.1.2"
description = "An integration package connecting Google VertexAI and LangChain"
authors = []
license = {text = "MIT"}
requires-python = ">=3.10.0,<4.0.0"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain-google"

dependencies = [
    "langchain-core>=1.0.0a3,<2.0.0",
    "google-cloud-aiplatform>=1.97.0,<2.0.0",
    "google-cloud-storage>=2.18.0,<3.0.0",
    "httpx>=0.28.0,<1.0.0",
    "httpx-sse>=0.4.0,<1.0.0",
    "pydantic>=2.9.0,<3.0.0",
    "validators>=0.22.0,<1.0.0",
    "bottleneck>=1.4.0,<2.0.0",
    "numexpr>=2.8.6,<3.0.0",
    "pyarrow>=19.0.1,<22.0.0",
]

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain-google/tree/main/libs/vertexai"
"Release Notes" = "https://github.com/langchain-ai/langchain-google/releases"
repository = "https://github.com/langchain-ai/langchain-google"

[project.optional-dependencies]
anthropic = ["anthropic>=0.35.0,<1.0.0"]
mistral = ["langchain-mistralai>=0.2.0,<2.0.0"]

[dependency-groups]
lint = ["ruff<0.13.0,>=0.12.2"]
typing = [
    "mypy>=1.18.1,<1.19.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-google-cloud-ndb>=2.2.0.20240106,<3.0.0.0",
    "types-protobuf>=4.24.0.4,<5.0.0.0",
    "anthropic>=0.64.0,<1.0.0",
]
test = [
    "pytest>=8.4.0,<9.0.0",
    "pytest-xdist>=3.8.0,<4.0.0",
    "pytest-order>=1.3.0,<2.0.0",
    "pytest-retry>=1.7.0,<2.0.0",
    "freezegun>=1.5.0,<2.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "syrupy>=4.9.0,<5.0.0",
    "pytest-watcher>=0.4.0,<1.0.0",
    "pytest-asyncio>=0.21.0,<2.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-protobuf>=4.24.0.4,<7.0.0.0",
    "google-api-python-client>=2.117.0,<3.0.0",
    "langchain>=1.0.0a5,<2.0.0",
    "anthropic>=0.64.0,<1.0.0",
    "validators>=0.35.0,<1.0.0",
    "langchain-tests>=1.0.0a1,<2.0.0",
]

test_integration = [
    "numexpr>=2.8.8; python_version>='3.9'",
    "numpy>=1.26.4; python_version<'3.13'",
    "numpy>=2.1.0; python_version>='3.13'",
    "google-api-python-client>=2.114.0,<3.0.0",
    "google-cloud-datastore>=2.19.0,<3.0.0",
    "langchain-mistralai>=0.2.12,<2.0.0",
    "langchain-tests>=1.0.0a1,<2.0.0",
]

dev = []

[tool.ruff]
target-version = "py39"
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
# TODO select = [ "ALL",]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
]
ignore = [
    "C90",     # McCabe complexity
    "COM812",  # Messes with the formatter
    "CPY",     # No copyright
    "FIX002",  # Line contains TODO
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "PLR09",   # Too many something (arg, statements, etc)
    "RUF012",  # Doesn't play well with Pydantic
    "TC001",   # Doesn't play well with Pydantic
    "TC002",   # Doesn't play well with Pydantic
    "TC003",   # Doesn't play well with Pydantic
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link in TODO

    # 3.9 needs
    "UP007",
    "UP006",
    "UP038",
    "UP045",
    "FA100",

    # TODO rules
    "ANN401",  # No Any types
    "BLE",     # Blind exceptions
    "DOC",     # Docstrings (preview)
    "ERA",     # No commented-out code
    "PLR2004", # Comparison to magic number
]
unfixable = [
    "B028",    # People should intentionally tune the stacklevel
    "PLW1510", # People should intentionally set the check argument
]

pydocstyle.convention = "google"
pydocstyle.ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [ "D1", "S", "SLF", "ARG001", "PGH003", "PT011"]
"scripts/**" = [ "INP", "S",]

[tool.mypy]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
error_summary = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# TODO
# strict = true
# disallow_untyped_defs = true

[[tool.mypy.overrides]]
# TODO: remove after migrating to google-genai
module = "vertexai.*"
ignore_missing_imports = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
addopts = "--strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
    "extended: mark tests as extended integration tests",
]
asyncio_mode = "auto"
