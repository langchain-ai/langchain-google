[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "langchain-google-genai"
version = "3.0.0"
description = "An integration package connecting Google's genai package and LangChain"
authors = []
license = {text = "MIT"}
requires-python = ">=3.10.0,<4.0.0"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain-google"

dependencies = [
    "langchain-core>=1.0.0,<2.0.0",
    "google-ai-generativelanguage>=0.7.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "filetype>=1.2.0,<2.0.0",
]

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain-google/tree/main/libs/genai"
"Release Notes" = "https://github.com/langchain-ai/langchain-google/releases"
repository = "https://github.com/langchain-ai/langchain-google"

[dependency-groups]
lint = ["ruff>=0.13.1,<0.14.0"]
typing = [
    "mypy>=1.18.1,<1.19.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-google-cloud-ndb>=2.2.0.1,<3.0.0.0",
    "types-protobuf>=4.24.0.20240302,<5.0.0.0",
    # TODO "types-filetype>=1.2,<2",
    # TODO "types-proto-plus>=1.22,<2",
    "numpy>=1.26.2",
]
test = [
    "pytest>=8.4.0,<9.0.0",
    "freezegun>=1.5.0,<2.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "syrupy>=4.9.0,<5.0.0",
    "pytest-watcher>=0.4.0,<1.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-retry>=1.7.0,<2.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "numpy>=1.26.4; python_version<'3.13'",
    "numpy>=2.1.0; python_version>='3.13'",
    "langchain-tests>=1.0.0,<2.0.0",
]

test_integration = [
    "pytest>=8.4.0,<9.0.0",
]

dev = []

[tool.ruff]
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
# TODO select = [ "ALL",]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
]
ignore = [
    "C90",     # McCabe complexity
    "COM812",  # Messes with the formatter
    "CPY",     # No copyright
    "FIX002",  # Line contains TODO
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "PLR09",   # Too many something (arg, statements, etc)
    "RUF012",  # Doesn't play well with Pydantic
    "TC001",   # Doesn't play well with Pydantic
    "TC002",   # Doesn't play well with Pydantic
    "TC003",   # Doesn't play well with Pydantic
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link in TODO

    # 3.9 needs
    "UP007",
    "UP006",
    "UP045",
    "FA100",

    # TODO rules
    "ANN401",  # No Any types
    "BLE",     # Blind exceptions
    "DOC",     # Docstrings (preview)
    "ERA",     # No commented-out code
    "PLR2004", # Comparison to magic number
]
unfixable = [
    "B028",    # People should intentionally tune the stacklevel
    "PLW1510", # People should intentionally set the check argument
]

pydocstyle.convention = "google"
pydocstyle.ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [ "D1", "S", "SLF", "ARG001", "PGH003", "PT011"]
"scripts/**" = [ "INP", "S",]

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
disallow_untyped_defs = true

# TODO: activate for 'strict' checking
disallow_any_generics = false
warn_return_any = false

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
#
# https://github.com/tophat/syrupy
# --snapshot-warn-unused    Prints a warning on unused snapshots rather than fail the test suite.
#addopts = "--snapshot-warn-unused --strict-markers --strict-config --durations=5"
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
